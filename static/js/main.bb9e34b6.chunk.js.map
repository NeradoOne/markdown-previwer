{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","setOptions","breaks","App","props","state","markdown","input","demo","output","e","entrada","target","value","this","setState","className","htmlFor","id","onChange","handleChange","bind","dangerouslySetInnerHTML","__html","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAMAA,IAAOC,WAAW,CAACC,QAAO,I,IAELC,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,SAAU,GACVC,MAAOC,EACPC,OAAQ,IANO,E,yDAUNC,GACX,IAAIC,EAAUD,EAAEE,OAAOC,MAEvBC,KAAKC,SAAS,CAAER,MAAOI,M,+BAKvB,OACE,sBAAKK,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,sCACA,sBAAKA,UAAU,QAAf,UACE,uBAAOC,QAAQ,SAAf,uCACA,0BAAUJ,MAAOC,KAAKT,MAAME,MAAOW,GAAG,SACtCC,SAAUL,KAAKM,aAAaC,KAAKP,WAGnC,oBAAIE,UAAU,UAAd,8BACA,qBAAKE,GAAG,UAAUF,UAAU,SAASM,wBAAyB,CAACC,OAAOvB,IAAOc,KAAKT,MAAME,iB,GA9B/DiB,aAqC3BhB,EAAI,2wBCjCKiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bb9e34b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// import Markdown from 'react-remarkable';\nimport marked from 'marked';\n// const marked = require('marked');\n\nmarked.setOptions({breaks:true});\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markdown: '',\n      input: demo,\n      output: '',\n    }\n  }\n\n  handleChange(e) {\n    let entrada = e.target.value;\n    // let str = entrada.replace((\"\\n\"), '  \\n', entrada);\n    this.setState({ input: entrada });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className='title' >React Markdown Previewer</h1>\n        <div className='input'>\n          <label htmlFor='editor'>Ingrese el texto markdown</label>\n          <textarea value={this.state.input} id='editor'\n          onChange={this.handleChange.bind(this)}> \n          </textarea>\n        </div>\n        <h2 className='preview'>Previsualizacion</h2>\n        <div id='preview' className='output' dangerouslySetInnerHTML={{__html:marked(this.state.input)}}>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst demo = `# Título\n## Subtítulo\nEste es un ejemplo de texto que da entrada a una lista genérica de elementos:\n- Elemento 1\n- Elemento 2\n- Elemento 3\n\nAl momento de ser interpretado pasan a ser código **HTML**:  \n\n    <ul>  \n      <li>Elemento 1</li>  \n    </ul>\n\nUsa las etiquetas \\`<ul></ul>\\` para generar la lista genérica.  \n\nEsta seria un cita:  \n> Línea de citas textuales,\n> segunda línea de citas textuales.\n\nTambién añadiendo imágenes:\n\n\n![Logo de Ejémplo](https://via.placeholder.com/150.png?text=PNG+Example)\n\n\nAl texto en Markdown puedes añadirle formato como **negrita** o *cursiva* de una manera muy sencilla. \n\nPara mas información se puede ingresar a *[Guía de Markdown](https://www.markdownguide.org)*.`;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}